/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Regularidade.java
 *
 * Created on 17/06/2010, 23:21:13
 */

package com.org.view;

import com.org.negocio.Configuracao;
import com.org.facade.SessionFacadeImpl;
import com.org.negocio.FiltroArquivo;
import com.org.util.SinanUtil;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;

/**
 *
 * @author geraldo
 */
public class Regularidade extends javax.swing.JPanel {

    SessionFacadeImpl session = new SessionFacadeImpl();
    boolean gtSinan=false;
    Map<Integer, String> mapaPeriodo = new HashMap<Integer, String>();
    /** Creates new form Regularidade */
    public Regularidade() {
        initComponents();
        Oportunidade.preencheAnos(cbAnoInicialMunicipio, 2009);
        Oportunidade.preencheAnos(cbAnoFinalMunicipio, 2009);
        ComboBoxModel modelo;
        this.session.setBrasil(true);
        this.session.setTodosMunicipios(true);
        this.session.setTemOpcaoTodasUFs(false);
        modelo = new DefaultComboBoxModel(this.session.retornaUFs());
        this.cbUf.setModel(modelo);
        Configuracao conf = new Configuracao();
        if(conf.getPropriedade("gtsinan").toString().equals("1")){
            txtPeriodos.setVisible(true);
            btnInserirPeriodo.setVisible(true);
            gtSinan = true;
            chkExportarDbf.setSelected(true);
        }else{
            txtPeriodos.setVisible(false);
            btnInserirPeriodo.setVisible(false);
        }
    }

    private boolean preencheuFormulario() {
        if(this.txtPeriodos.getText().isEmpty()){
            Master.mensagem("Não há períodos para emissão do relatório.");
            return false;
        }
        if (cbUf.getSelectedItem().toString().equals("-- Selecione --")) {
            Master.mensagem("Selecione a UF de residência");
            return false;
        }
        if (Integer.parseInt(this.spSemanaInicial.getValue().toString()) > 53 || Integer.parseInt(this.spSemanaFinal.getValue().toString()) > 53) {
           Master.mensagem("Semana deve ser menor que 54");
            return false;
        }
        int anoInicial = Integer.parseInt(cbAnoInicialMunicipio.getSelectedItem().toString());
        int anoFinal = Integer.parseInt(cbAnoFinalMunicipio.getSelectedItem().toString());
        int semanaIncial = Integer.parseInt(this.spSemanaInicial.getValue().toString());
        int semanaFinal = Integer.parseInt(this.spSemanaFinal.getValue().toString());
        if (anoFinal < anoInicial) {
            Master.mensagem("Ano final deve ser maior que inicial");
            return false;
        } else {
            if ((anoInicial == anoFinal) && semanaFinal < semanaIncial) {
                Master.mensagem("Semana final deve ser maior que inicial");
                return false;

            }
        }
        
        if(this.txtPeriodos.getLineCount() > 18){
            SinanUtil.mensagem("Mensagem", "Não é possível inserir mais de 18 períodos.");
            return false;
        }

        
        return true;
    }
    
    public boolean validaSemana(){
        if (Integer.parseInt(this.spSemanaInicial.getValue().toString()) > 53 || Integer.parseInt(this.spSemanaFinal.getValue().toString()) > 53) {
           //Master.mensagem("Semana deve ser menor que 54");
            return true;
        }
        return false;
    }
    public boolean validaAno(){
        
        int anoInicial = Integer.parseInt(cbAnoInicialMunicipio.getSelectedItem().toString());
        int anoFinal = Integer.parseInt(cbAnoFinalMunicipio.getSelectedItem().toString());
        if (anoFinal < anoInicial) {
            //Master.mensagem("Ano final deve ser maior que inicial");
            return true;
        }
        return false;
    }
    
     public boolean validaPeriodoSemana(){
        
        int anoInicial = Integer.parseInt(cbAnoInicialMunicipio.getSelectedItem().toString());
        int anoFinal = Integer.parseInt(cbAnoFinalMunicipio.getSelectedItem().toString());
        int semanaIncial = Integer.parseInt(this.spSemanaInicial.getValue().toString());
        int semanaFinal = Integer.parseInt(this.spSemanaFinal.getValue().toString());

        if ((anoInicial == anoFinal) && semanaFinal < semanaIncial) {
            //Master.mensagem("Semana final deve ser maior que inicial");
            return true;
        }
        return false;
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelMunicipioSemNotificacao = new javax.swing.JPanel();
        btnSelecionarArquivos = new javax.swing.JButton();
        lblArquivosSelecionados = new javax.swing.JLabel();
        btnLimparSelecao = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        cbAnoInicialMunicipio = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        spSemanaInicial = new javax.swing.JSpinner();
        jLabel29 = new javax.swing.JLabel();
        cbAnoFinalMunicipio = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        spSemanaFinal = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPeriodos = new javax.swing.JTextArea();
        btnInserirPeriodo = new javax.swing.JButton();
        prbStatus = new javax.swing.JProgressBar();
        btLimpar = new javax.swing.JButton();
        btCalcular = new javax.swing.JButton();
        cbUf = new javax.swing.JComboBox();
        chkExportarDbf = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        cbMunicipio = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cbRegional = new javax.swing.JComboBox();
        lblUF = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rbRegAnalitico = new javax.swing.JRadioButton();
        rbRegSintetico = new javax.swing.JRadioButton();
        rbRegAnaliticoSintetico = new javax.swing.JRadioButton();
        prbStatusGeral = new javax.swing.JProgressBar();

        panelMunicipioSemNotificacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivos DBF selecionados"));

        btnSelecionarArquivos.setText("Selecionar arquivos");
        btnSelecionarArquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarArquivosActionPerformed(evt);
            }
        });

        lblArquivosSelecionados.setText("Nenhum arquivo selecionado");
        lblArquivosSelecionados.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblArquivosSelecionados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnLimparSelecao.setText("Limpar Seleção");
        btnLimparSelecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparSelecaoActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel26.setForeground(java.awt.Color.red);
        jLabel26.setText("Selecione os seguintes arquivos DBF: Notificação Individual, Negativa, Surto e Epizootia");

        cbAnoInicialMunicipio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008" }));
        cbAnoInicialMunicipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAnoInicialMunicipioActionPerformed(evt);
            }
        });

        jLabel27.setText("DE   Ano:");

        jLabel28.setText("Semana:");

        spSemanaInicial.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spSemanaInicialStateChanged(evt);
            }
        });

        jLabel29.setText("ATÉ  Ano:");

        cbAnoFinalMunicipio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008" }));
        cbAnoFinalMunicipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAnoFinalMunicipioActionPerformed(evt);
            }
        });

        jLabel30.setText("Semana:");

        spSemanaFinal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spSemanaFinalStateChanged(evt);
            }
        });

        txtPeriodos.setColumns(20);
        txtPeriodos.setRows(5);
        jScrollPane1.setViewportView(txtPeriodos);

        btnInserirPeriodo.setText("Inserir");
        btnInserirPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirPeriodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMunicipioSemNotificacaoLayout = new javax.swing.GroupLayout(panelMunicipioSemNotificacao);
        panelMunicipioSemNotificacao.setLayout(panelMunicipioSemNotificacaoLayout);
        panelMunicipioSemNotificacaoLayout.setHorizontalGroup(
            panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(lblArquivosSelecionados, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                        .addComponent(btnSelecionarArquivos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparSelecao))
                    .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                        .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                                .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                                        .addComponent(jLabel29)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbAnoFinalMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spSemanaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbAnoInicialMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel28)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spSemanaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                                .addComponent(btnInserirPeriodo)
                                .addGap(75, 75, 75)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        panelMunicipioSemNotificacaoLayout.setVerticalGroup(
            panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionarArquivos)
                    .addComponent(btnLimparSelecao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblArquivosSelecionados)
                .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(cbAnoInicialMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(spSemanaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMunicipioSemNotificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(cbAnoFinalMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(spSemanaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInserirPeriodo)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMunicipioSemNotificacaoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btCalcular.setLabel("Calcular");
        btCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularActionPerformed(evt);
            }
        });

        cbUf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUfActionPerformed(evt);
            }
        });

        chkExportarDbf.setText("Salvar resultado em DBF");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("Regional:"); // NOI18N

        cbMunicipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMunicipioActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText("Município:"); // NOI18N

        cbRegional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRegionalActionPerformed(evt);
            }
        });

        lblUF.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblUF.setText("UF de Notificação:"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de relatório"));

        buttonGroup1.add(rbRegAnalitico);
        rbRegAnalitico.setSelected(true);
        rbRegAnalitico.setText("Analítico");
        rbRegAnalitico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRegAnaliticoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbRegSintetico);
        rbRegSintetico.setText("Sintético");

        buttonGroup1.add(rbRegAnaliticoSintetico);
        rbRegAnaliticoSintetico.setText("Analítico e Sintético");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbRegAnalitico)
                    .addComponent(rbRegSintetico)
                    .addComponent(rbRegAnaliticoSintetico))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbRegAnalitico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbRegSintetico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbRegAnaliticoSintetico))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUF)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbMunicipio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbRegional, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkExportarDbf))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelMunicipioSemNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prbStatusGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(prbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUF)
                            .addComponent(cbUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRegional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkExportarDbf))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(panelMunicipioSemNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prbStatusGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btCalcular)
                        .addComponent(btLimpar)))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarArquivosActionPerformed
        JFileChooser fileopen = new JFileChooser();
        fileopen.setMultiSelectionEnabled(true);
        //        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo DBF", "dbf");
        FiltroArquivo filtro = new FiltroArquivo();
        filtro.addExtension("dbf");
        filtro.setDescription("Arquivo DBF");
        filtro.addInicioNome("NINDI");
        filtro.addInicioNome("NNEGA");
        filtro.addInicioNome("EPIZO");
        filtro.addInicioNome("NSURT");
        filtro.addInicioNome("DENGO");

        //        fileopen.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileopen.addChoosableFileFilter(filtro);

        File file2 = new File(new Configuracao().getCaminho());
        fileopen.setCurrentDirectory(file2);
        int ret = fileopen.showDialog(null, "Abrir DBF");
        String[] arquivos = null;
        if (ret == JFileChooser.APPROVE_OPTION) {
            File[] files = fileopen.getSelectedFiles();
            if (lblArquivosSelecionados.getText().equals("Nenhum arquivo selecionado")) {
                lblArquivosSelecionados.setText("");
            }
            for (int i = 0; i < files.length; i++) {
                //verifica se ja está selecionado
                if (lblArquivosSelecionados.getText().lastIndexOf(files[i].getName()) == -1) {
                    lblArquivosSelecionados.setText(lblArquivosSelecionados.getText() + files[i].getName() + "||");
                }
                Configuracao.setPropriedade("caminho", files[i].getParent() + "\\\\");
                System.out.println(files[i].getParent());

            }

        }
        //verificar se foi selecionado os 4 arquivos
        //individual, negativa, surto ou epizootia
        arquivos = lblArquivosSelecionados.getText().split("\\|\\|");
        if (arquivos != null) {
            if (arquivos.length < 4) {
                Master.mensagem("É necessário selecionar 4 bases: Notificação Individual, Notificação Negativa, Surto e epizootia");
            }
        }
    }//GEN-LAST:event_btnSelecionarArquivosActionPerformed

    private void btnLimparSelecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparSelecaoActionPerformed
        lblArquivosSelecionados.setText("Nenhum arquivo selecionado");
}//GEN-LAST:event_btnLimparSelecaoActionPerformed

    private void cbAnoInicialMunicipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAnoInicialMunicipioActionPerformed

}//GEN-LAST:event_cbAnoInicialMunicipioActionPerformed

    private void spSemanaInicialStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spSemanaInicialStateChanged
        if(Integer.parseInt(spSemanaInicial.getValue().toString()) > 53)
            spSemanaInicial.setValue(53);
}//GEN-LAST:event_spSemanaInicialStateChanged

    private void cbAnoFinalMunicipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAnoFinalMunicipioActionPerformed

}//GEN-LAST:event_cbAnoFinalMunicipioActionPerformed

    private void spSemanaFinalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spSemanaFinalStateChanged
        if(Integer.parseInt(spSemanaFinal.getValue().toString()) > 53)
            spSemanaFinal.setValue(53);
}//GEN-LAST:event_spSemanaFinalStateChanged

    private void btCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularActionPerformed
        if (!this.preencheuFormulario()) {
            return;
        }
        session = new SessionFacadeImpl();
        SessionFacadeImpl.setNomeDbf("");
        session.setBrasil(true);
        session.setTodosMunicipios(true);
//        if (SessionFacadeImpl.isDbf()) {
//            SessionFacadeImpl.setNomeDbf("PFANE");
//            if (!Master.escolherDBF()) //gerar o relatorio
//            {
//                return;
//            }
//        }
        //verifica se vai exportar para dbf o resultado
        if (chkExportarDbf.isSelected()) {
            session.setExportarDbf(false);
            //abrir janela para definir o nome do arquivo para exportação
//                        if (!Master.setNomeArquivoDBF()) {
            //                return;
        } else {
            session.setExportarDbf(false);
        }
        this.prbStatus.setStringPainted(true);
        this.prbStatus.setValue(0);
        this.prbStatusGeral.setStringPainted(false);
        this.prbStatus.setValue(0);
        //passa as datas selecionadas
        
        Map parametros = new HashMap();
        parametros.put("parArquivos", this.lblArquivosSelecionados.getText());
        parametros.put("parAnoInicial", this.cbAnoInicialMunicipio.getSelectedItem().toString());
        parametros.put("parAnoFinal", this.cbAnoFinalMunicipio.getSelectedItem().toString());
        parametros.put("parSemanaInicial", this.spSemanaInicial.getValue().toString());
        parametros.put("parSemanaFinal", this.spSemanaFinal.getValue().toString());
        parametros.put("parConfig", "");
        parametros.put("parRodape", "");
        parametros.put("parTitulo1", "Municípios que não notificaram no Sinan");
        parametros.put("parDataHoje", new SimpleDateFormat("dd/MM/yyyy").format(new java.util.Date()));
        if (this.cbUf.getSelectedItem().toString().equals("Brasil")) {
            parametros.put("parSgUf", "Brasil");
        }else{
            parametros.put("parSgUf", this.cbUf.getSelectedItem().toString());
        }
        if(this.cbRegional.getSelectedItem().toString().equals("-- Selecione --")){
            parametros.put("parRegional", "TODAS");
        }else{
            parametros.put("parRegional", this.cbRegional.getSelectedItem().toString());
        }
        parametros.put("parNomeMunicipio", "TODOS");
        if(gtSinan){
            parametros.put("parSemanas",txtPeriodos.getText());
        }
         if (chkExportarDbf.isSelected()) {
             parametros.put("isDBF", true);
         }else{
             parametros.put("isDBF", false);
         }
        parametros.put("parGtSinan",gtSinan);
        
        if(rbRegAnalitico.isSelected()){
            parametros.put("tipoRelatorio", "analitico");
        }else if(rbRegSintetico.isSelected()){
            parametros.put("tipoRelatorio", "sintetico");
        }else{
            parametros.put("tipoRelatorio", "analiticoSintetico");
        }
        
        session.setParametros(parametros);
        session.setJprogress(prbStatus);
        session.setJprogressGeral(prbStatusGeral);
        session.setMunicipio(cbMunicipio.getSelectedItem().toString());
        session.setRegional(cbRegional.getSelectedItem().toString());
        session.setUf(cbUf.getSelectedItem().toString());
        session.setRelatorio("Regularidade");
        session.execute();
}//GEN-LAST:event_btCalcularActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        cbMunicipio.removeAllItems();
        cbRegional.removeAllItems();
        cbUf.setSelectedIndex(0);
}//GEN-LAST:event_btLimparActionPerformed

    private void cbUfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUfActionPerformed
        ComboBoxModel modelo;
        modelo = new DefaultComboBoxModel(this.session.retornaRegionais(this.cbUf.getSelectedItem().toString()));
        this.cbRegional.setModel(modelo);
        modelo = new DefaultComboBoxModel(this.session.retornaMunicipios(this.cbUf.getSelectedItem().toString()));
        this.cbMunicipio.setModel(modelo);
}//GEN-LAST:event_cbUfActionPerformed

    private void cbMunicipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMunicipioActionPerformed

}//GEN-LAST:event_cbMunicipioActionPerformed

    private void cbRegionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRegionalActionPerformed
        ComboBoxModel modelo;
        modelo = new DefaultComboBoxModel(this.session.retornaMunicipios(this.cbUf.getSelectedItem().toString(), this.cbRegional.getSelectedItem().toString()));
        this.cbMunicipio.setModel(modelo);
}//GEN-LAST:event_cbRegionalActionPerformed

    private String formataSemana(String semana) {
        if (Integer.parseInt(semana) < 10) {
            return "0" + semana;
        } else {
            return semana;
        }
    }
    
    private void btnInserirPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirPeriodoActionPerformed
        if(this.txtPeriodos.getLineCount() <= 18){
            
            boolean periodoIgual = false;        
            String periodoDe = this.cbAnoInicialMunicipio.getSelectedItem().toString()+ formataSemana(this.spSemanaInicial.getValue().toString());
            String peridoAte = this.cbAnoFinalMunicipio.getSelectedItem().toString()+ formataSemana(this.spSemanaFinal.getValue().toString());
            
            mapaPeriodo.put(this.txtPeriodos.getLineCount(), periodoDe+peridoAte);
            
            /**
             * Validação para não permitir inserção de períodos iguais
             */
            if(this.txtPeriodos.getLineCount()> 1){
                for(int i=1; i<this.txtPeriodos.getLineCount(); i++){
                    if(mapaPeriodo.get(i).equals(periodoDe+peridoAte)){
                        periodoIgual=true;
                        break;
                    }
                }
            }
            
            String valor = this.cbAnoInicialMunicipio.getSelectedItem().toString()+ formataSemana(this.spSemanaInicial.getValue().toString())+
                    " a "+this.cbAnoFinalMunicipio.getSelectedItem().toString()+ formataSemana(this.spSemanaFinal.getValue().toString())+"\n";
            
            if(validaSemana()){
                SinanUtil.mensagem("Mensagem", "A semana deve ser menor que 54.");
            }else if(validaAno()){
                SinanUtil.mensagem("Mensagem", "Ano final deve ser maior que o inicial.");
            }else if(validaPeriodoSemana()){
                SinanUtil.mensagem("Mensagem", "Semana final deve ser maior que a inicial.");
            }else if(periodoIgual){
                SinanUtil.mensagem("Mensagem", "Não é permitido períodos iguais.");
            }else if(SinanUtil.intervaloSemanas(periodoDe, peridoAte) > 8){
                SinanUtil.mensagem("Mensagem", "Não é permitido intervalo entre semanas maior do que 8.");
            }else{
                txtPeriodos.setText(txtPeriodos.getText()+valor);
            }
            
        }
        else{
            SinanUtil.mensagem("Mensagem", "Não é possível inserir mais de 18 períodos.");
        }
    }//GEN-LAST:event_btnInserirPeriodoActionPerformed

    private void rbRegAnaliticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRegAnaliticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbRegAnaliticoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCalcular;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btnInserirPeriodo;
    private javax.swing.JButton btnLimparSelecao;
    private javax.swing.JButton btnSelecionarArquivos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbAnoFinalMunicipio;
    private javax.swing.JComboBox cbAnoInicialMunicipio;
    private javax.swing.JComboBox cbMunicipio;
    private javax.swing.JComboBox cbRegional;
    private javax.swing.JComboBox cbUf;
    private javax.swing.JCheckBox chkExportarDbf;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblArquivosSelecionados;
    private javax.swing.JLabel lblUF;
    private javax.swing.JPanel panelMunicipioSemNotificacao;
    private javax.swing.JProgressBar prbStatus;
    private javax.swing.JProgressBar prbStatusGeral;
    private javax.swing.JRadioButton rbRegAnalitico;
    private javax.swing.JRadioButton rbRegAnaliticoSintetico;
    private javax.swing.JRadioButton rbRegSintetico;
    private javax.swing.JSpinner spSemanaFinal;
    private javax.swing.JSpinner spSemanaInicial;
    private javax.swing.JTextArea txtPeriodos;
    // End of variables declaration//GEN-END:variables

}
